{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surfy\\\\Documents\\\\HSR\\\\Semester 5\\\\SA\\\\ReactTutorial\\\\TopologyTest\\\\TopologyTest\\\\src\\\\components\\\\SingleDrawing.jsx\";\nimport GraphVis from 'react-graph-vis';\nimport React from 'react';\nimport { palette, graphVisLocales } from '../functions/GlobalConstants';\nimport { addNode, showEditNodeDialog } from '../functions/NodeFunctions';\nimport { addEdge, showEditEdgeDialog } from '../functions/EdgeFunctions';\nimport EditNodeDialog from '../UI/EditNodeDialog/EditNodeDialog';\nimport EditEdgeDialog from '../UI/EditEdgeDialog/EditEdgeDialog';\nimport './SingleDrawing.css';\n\nclass SingleDrawing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphVis: {\n        nodes: [],\n        edges: []\n      },\n      options: {\n        autoResize: true,\n        height: '100%',\n        width: '100%',\n        locale: 'en',\n        locales: graphVisLocales,\n        clickToUse: false,\n        layout: {},\n        nodes: {\n          font: {\n            size: 18\n          }\n        },\n        edges: {\n          arrows: {\n            to: {\n              enabled: false\n            },\n            from: {\n              enabled: false\n            }\n          },\n          color: {\n            color: palette.black,\n            hover: palette.black\n          },\n          width: 2,\n          hoverWidth: function (width) {\n            return width * 2;\n          },\n          selectionWidth: function (width) {\n            return width * 2;\n          },\n          font: {\n            align: 'top',\n            size: 18\n          }\n        },\n        groups: {\n          linux: {\n            shape: 'circle',\n            color: 'blue'\n          },\n          firewall: {\n            shape: 'square',\n            color: 'red'\n          }\n        },\n        manipulation: {\n          enabled: true,\n          initiallyActive: true,\n          addNode: addNode,\n          editNode: showEditNodeDialog,\n          addEdge: addEdge,\n          editEdge: showEditEdgeDialog,\n          deleteNode: true,\n          deleteEdge: true\n        },\n        interaction: {\n          dragNodes: true,\n          dragView: true,\n          // Use node hover colors when to mouse moves over it\n          hover: true,\n          // Longheld click or CTRT+click will add to the selection\n          multiselect: true,\n          selectable: true\n        },\n        // Turn automatic graph rearranging off\n        physics: false,\n        // Turn configuration panel off\n        configure: false\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"single-drawing-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(EditNodeDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(EditEdgeDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(GraphVis, {\n      graph: this.state.graphVis,\n      options: this.state.options,\n      events: {},\n      style: {\n        width: \"100%\",\n        height: window.innerHeight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SingleDrawing;","map":{"version":3,"sources":["C:/Users/Surfy/Documents/HSR/Semester 5/SA/ReactTutorial/TopologyTest/TopologyTest/src/components/SingleDrawing.jsx"],"names":["GraphVis","React","palette","graphVisLocales","addNode","showEditNodeDialog","addEdge","showEditEdgeDialog","EditNodeDialog","EditEdgeDialog","SingleDrawing","Component","constructor","props","state","graphVis","nodes","edges","options","autoResize","height","width","locale","locales","clickToUse","layout","font","size","arrows","to","enabled","from","color","black","hover","hoverWidth","selectionWidth","align","groups","linux","shape","firewall","manipulation","initiallyActive","editNode","editEdge","deleteNode","deleteEdge","interaction","dragNodes","dragView","multiselect","selectable","physics","configure","render","window","innerHeight"],"mappings":"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","sourcesContent":["import GraphVis from 'react-graph-vis';\nimport React from 'react';\nimport { palette, graphVisLocales } from '../functions/GlobalConstants';\nimport { addNode, showEditNodeDialog } from '../functions/NodeFunctions';\nimport { addEdge, showEditEdgeDialog } from '../functions/EdgeFunctions';\nimport EditNodeDialog from '../UI/EditNodeDialog/EditNodeDialog';\nimport EditEdgeDialog from '../UI/EditEdgeDialog/EditEdgeDialog';\nimport './SingleDrawing.css';\n\nclass SingleDrawing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphVis: { nodes: [], edges: [] },\n      options: {\n        autoResize: true,\n        height: '100%',\n        width: '100%',\n        locale: 'en',\n        locales: graphVisLocales,\n        clickToUse: false,\n        layout: {},\n        nodes: {\n          font: { size: 18 },\n        },\n        edges: {\n          arrows: {\n            to: { enabled: false },\n            from: { enabled: false },\n          },\n          color: { color: palette.black, hover: palette.black },\n          width: 2,\n          hoverWidth: function (width) { return width * 2; },\n          selectionWidth: function (width) { return width * 2; },\n          font: { align: 'top', size: 18 },\n        },\n        groups: {\n          linux: {\n            shape: 'circle',\n            color: 'blue',\n          },\n          firewall: {\n            shape: 'square',\n            color: 'red',\n          },\n        },\n        manipulation: {\n          enabled: true,\n          initiallyActive: true,\n          addNode: addNode,\n          editNode: showEditNodeDialog,\n          addEdge: addEdge,\n          editEdge: showEditEdgeDialog,\n          deleteNode: true,\n          deleteEdge: true,\n        },\n        interaction: {\n          dragNodes: true,\n          dragView: true,\n          // Use node hover colors when to mouse moves over it\n          hover: true,\n          // Longheld click or CTRT+click will add to the selection\n          multiselect: true,\n          selectable: true,\n        },\n        // Turn automatic graph rearranging off\n        physics: false,\n        // Turn configuration panel off\n        configure: false,\n\n      },\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"single-drawing-box\">\n        <EditNodeDialog />\n        <EditEdgeDialog />\n        <GraphVis\n          graph={this.state.graphVis}\n          options={this.state.options}\n          events={{ }}\n          style={{ width: \"100%\", height: window.innerHeight}} />\n      </div>\n    );\n  }\n}\n\nexport default SingleDrawing;\n"]},"metadata":{},"sourceType":"module"}