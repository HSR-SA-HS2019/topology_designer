{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Surfy\\\\Documents\\\\HSR\\\\Semester 5\\\\SA\\\\topology_designer\\\\frontend\\\\src\\\\components\\\\SingleDrawing.jsx\";\nimport GraphVis from 'react-graph-vis';\nimport React from 'react';\nimport axios from 'axios';\nimport { palette, graphVisLocales } from '../functions/GlobalConstants';\nimport { addNode, showEditNodeDialog } from '../functions/NodeFunctions';\nimport { addEdge, showEditEdgeDialog } from '../functions/EdgeFunctions';\nimport EditNodeDialog from '../UI/EditNodeDialog/EditNodeDialog';\nimport EditEdgeDialog from '../UI/EditEdgeDialog/EditEdgeDialog';\nimport './SingleDrawing.css';\n\nclass SingleDrawing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setNetworkInstance = nw => {\n      this.network = nw;\n    };\n\n    this.DeleteTopology = () => {\n      this.network.setData(null, null);\n    };\n\n    this.state = {\n      graphVis: {\n        nodes: [],\n        edges: []\n      },\n      options: {\n        autoResize: true,\n        height: '100%',\n        width: '100%',\n        locale: 'en',\n        locales: graphVisLocales,\n        clickToUse: false,\n        layout: {},\n        nodes: {\n          font: {\n            size: 18\n          }\n        },\n        edges: {\n          arrows: {\n            to: {\n              enabled: false\n            },\n            from: {\n              enabled: false\n            }\n          },\n          color: {\n            color: palette.black,\n            hover: palette.black\n          },\n          width: 2,\n          hoverWidth: function (width) {\n            return width * 2;\n          },\n          selectionWidth: function (width) {\n            return width * 2;\n          },\n          font: {\n            align: 'top',\n            size: 18\n          }\n        },\n        manipulation: {\n          enabled: true,\n          initiallyActive: true,\n          addNode: addNode,\n          editNode: showEditNodeDialog,\n          addEdge: addEdge,\n          editEdge: showEditEdgeDialog,\n          deleteNode: true,\n          deleteEdge: true\n        },\n        interaction: {\n          dragNodes: true,\n          dragView: true,\n          // Use node hover colors when to mouse moves over it\n          hover: true,\n          // Longheld click or CTRT+click will add to the selection\n          multiselect: true,\n          selectable: true\n        },\n        // Turn automatic graph rearranging off\n        physics: false,\n        // Turn configuration panel off\n        configure: false\n      }\n    };\n    const network = null;\n    this.initNetworkInstance = this.initNetworkInstance.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/1').then(res => {\n      this.setState({\n        options: {\n          nodes: {\n            label: res.data.name\n          }\n        }\n      });\n      console.log(res.data.name);\n    });\n  }\n\n  initNetworkInstance(networkInstance) {\n    this.network = networkInstance;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"single-drawing-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(EditNodeDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(EditEdgeDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(GraphVis, {\n      graph: this.state.graphVis,\n      options: this.state.options,\n      events: {},\n      style: {\n        width: \"100%\",\n        height: '500px'\n      },\n      getNetwork: this.setNetworkInstance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.DeleteTopology(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Delete Topology\"))));\n  }\n\n}\n\nexport default SingleDrawing;","map":{"version":3,"sources":["C:/Users/Surfy/Documents/HSR/Semester 5/SA/topology_designer/frontend/src/components/SingleDrawing.jsx"],"names":["GraphVis","React","axios","palette","graphVisLocales","addNode","showEditNodeDialog","addEdge","showEditEdgeDialog","EditNodeDialog","EditEdgeDialog","SingleDrawing","Component","constructor","props","setNetworkInstance","nw","network","DeleteTopology","setData","state","graphVis","nodes","edges","options","autoResize","height","width","locale","locales","clickToUse","layout","font","size","arrows","to","enabled","from","color","black","hover","hoverWidth","selectionWidth","align","manipulation","initiallyActive","editNode","editEdge","deleteNode","deleteEdge","interaction","dragNodes","dragView","multiselect","selectable","physics","configure","initNetworkInstance","bind","componentDidMount","get","then","res","setState","label","data","name","console","log","networkInstance","render"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,8BAAzC;AACA,SAAQC,OAAR,EAAiBC,kBAAjB,QAA0C,4BAA1C;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,4BAA5C;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAN,SAA4BV,KAAK,CAACW,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4EnBC,kBA5EmB,GA4EEC,EAAE,IAAI;AACzB,WAAKC,OAAL,GAAeD,EAAf;AACD,KA9EkB;;AAAA,SAiFnBE,cAjFmB,GAiFF,MAAM;AACrB,WAAKD,OAAL,CAAaE,OAAb,CAAqB,IAArB,EAA2B,IAA3B;AACD,KAnFkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OADC;AAEXC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE,IADL;AAEPC,QAAAA,MAAM,EAAE,MAFD;AAGPC,QAAAA,KAAK,EAAE,MAHA;AAIPC,QAAAA,MAAM,EAAE,IAJD;AAKPC,QAAAA,OAAO,EAAEzB,eALF;AAMP0B,QAAAA,UAAU,EAAE,KANL;AAOPC,QAAAA,MAAM,EAAE,EAPD;AAQPT,QAAAA,KAAK,EAAE;AACLU,UAAAA,IAAI,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR;AADD,SARA;AAWPV,QAAAA,KAAK,EAAE;AACLW,UAAAA,MAAM,EAAE;AACNC,YAAAA,EAAE,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAX,aADE;AAENC,YAAAA,IAAI,EAAE;AAAED,cAAAA,OAAO,EAAE;AAAX;AAFA,WADH;AAKLE,UAAAA,KAAK,EAAE;AAAEA,YAAAA,KAAK,EAAEnC,OAAO,CAACoC,KAAjB;AAAwBC,YAAAA,KAAK,EAAErC,OAAO,CAACoC;AAAvC,WALF;AAMLZ,UAAAA,KAAK,EAAE,CANF;AAOLc,UAAAA,UAAU,EAAE,UAAUd,KAAV,EAAiB;AAAE,mBAAOA,KAAK,GAAG,CAAf;AAAmB,WAP7C;AAQLe,UAAAA,cAAc,EAAE,UAAUf,KAAV,EAAiB;AAAE,mBAAOA,KAAK,GAAG,CAAf;AAAmB,WARjD;AASLK,UAAAA,IAAI,EAAE;AAAEW,YAAAA,KAAK,EAAE,KAAT;AAAgBV,YAAAA,IAAI,EAAE;AAAtB;AATD,SAXA;AAsBPW,QAAAA,YAAY,EAAE;AACZR,UAAAA,OAAO,EAAE,IADG;AAEZS,UAAAA,eAAe,EAAE,IAFL;AAGZxC,UAAAA,OAAO,EAAEA,OAHG;AAIZyC,UAAAA,QAAQ,EAAExC,kBAJE;AAKZC,UAAAA,OAAO,EAAEA,OALG;AAMZwC,UAAAA,QAAQ,EAAEvC,kBANE;AAOZwC,UAAAA,UAAU,EAAE,IAPA;AAQZC,UAAAA,UAAU,EAAE;AARA,SAtBP;AAgCPC,QAAAA,WAAW,EAAE;AACXC,UAAAA,SAAS,EAAE,IADA;AAEXC,UAAAA,QAAQ,EAAE,IAFC;AAGX;AACAZ,UAAAA,KAAK,EAAE,IAJI;AAKX;AACAa,UAAAA,WAAW,EAAE,IANF;AAOXC,UAAAA,UAAU,EAAE;AAPD,SAhCN;AAyCP;AACAC,QAAAA,OAAO,EAAE,KA1CF;AA2CP;AACAC,QAAAA,SAAS,EAAE;AA5CJ;AAFE,KAAb;AAkDA,UAAMvC,OAAO,GAAG,IAAhB;AACA,SAAKwC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBzD,IAAAA,KAAK,CAAC0D,GAAN,CAAU,6BAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AACZvC,QAAAA,OAAO,EAAC;AACNF,UAAAA,KAAK,EAAC;AACJ0C,YAAAA,KAAK,EAAEF,GAAG,CAACG,IAAJ,CAASC;AADZ;AADA;AADI,OAAd;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,IAAJ,CAASC,IAArB;AACD,KAVL;AAWD;;AAEDT,EAAAA,mBAAmB,CAACY,eAAD,EAAkB;AACnC,SAAKpD,OAAL,GAAeoD,eAAf;AACD;;AAcDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWC,QADtB;AAEI,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,OAFxB;AAGI,MAAA,MAAM,EAAE,EAHZ;AAII,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE,MAAT;AAAiBD,QAAAA,MAAM,EAAE;AAAzB,OAJX;AAKI,MAAA,UAAU,EAAE,KAAKX,kBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKG,cAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CAXF,CADF;AAsBD;;AAhHyC;;AAmH5C,eAAeP,aAAf","sourcesContent":["import GraphVis from 'react-graph-vis';\nimport React from 'react';\nimport axios from 'axios';\nimport { palette, graphVisLocales } from '../functions/GlobalConstants';\nimport {addNode, showEditNodeDialog} from '../functions/NodeFunctions';\nimport { addEdge, showEditEdgeDialog } from '../functions/EdgeFunctions';\nimport EditNodeDialog from '../UI/EditNodeDialog/EditNodeDialog';\nimport EditEdgeDialog from '../UI/EditEdgeDialog/EditEdgeDialog';\nimport './SingleDrawing.css';\n\nclass SingleDrawing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphVis: { nodes: [], edges: [] },\n      options: {\n        autoResize: true,\n        height: '100%',\n        width: '100%',\n        locale: 'en',\n        locales: graphVisLocales,\n        clickToUse: false,\n        layout: {},\n        nodes: {\n          font: { size: 18 },\n        },\n        edges: {\n          arrows: {\n            to: { enabled: false },\n            from: { enabled: false },\n          },\n          color: { color: palette.black, hover: palette.black },\n          width: 2,\n          hoverWidth: function (width) { return width * 2; },\n          selectionWidth: function (width) { return width * 2; },\n          font: { align: 'top', size: 18 },\n        },\n        manipulation: {\n          enabled: true,\n          initiallyActive: true,\n          addNode: addNode,\n          editNode: showEditNodeDialog,\n          addEdge: addEdge,\n          editEdge: showEditEdgeDialog,\n          deleteNode: true,\n          deleteEdge: true,\n        },\n        interaction: {\n          dragNodes: true,\n          dragView: true,\n          // Use node hover colors when to mouse moves over it\n          hover: true,\n          // Longheld click or CTRT+click will add to the selection\n          multiselect: true,\n          selectable: true,\n        },\n        // Turn automatic graph rearranging off\n        physics: false,\n        // Turn configuration panel off\n        configure: false,\n\n      },\n    };\n    const network = null;\n    this.initNetworkInstance = this.initNetworkInstance.bind(this);\n\n\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/1')\n        .then(res => {\n          this.setState({\n            options:{\n              nodes:{\n                label: res.data.name\n              }\n            }\n          });\n          console.log(res.data.name)\n        })\n  };\n\n  initNetworkInstance(networkInstance) {\n    this.network = networkInstance;\n  }\n\n  setNetworkInstance = nw => {\n    this.network = nw;\n  };\n\n\n  DeleteTopology = () => {\n    this.network.setData(null, null);\n  };\n\n\n\n\n  render() {\n    return (\n      <div className=\"single-drawing-box\">\n        <div>\n          <EditNodeDialog />\n          <EditEdgeDialog />\n          <GraphVis\n              graph={this.state.graphVis}\n              options={this.state.options}\n              events={{ }}\n              style={{ width: \"100%\", height: '500px'}}\n              getNetwork={this.setNetworkInstance}/>\n        </div>\n        <div>\n          <div>\n            <button onClick={() => this.DeleteTopology()}>\n              Delete Topology\n            </button>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default SingleDrawing;\n"]},"metadata":{},"sourceType":"module"}